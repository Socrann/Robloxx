local library = { 
	flags = { }, 
	items = { } 
}

-- Services
local players = game:GetService("Players")
local uis = game:GetService("UserInputService")
local runservice = game:GetService("RunService")
local tweenservice = game:GetService("TweenService")
local marketplaceservice = game:GetService("MarketplaceService")
local textservice = game:GetService("TextService")
local coregui = game:GetService("CoreGui")
local httpservice = game:GetService("HttpService")

local player = players.LocalPlayer
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera

library.theme = {
	fontsize = 15,
	titlesize = 18,
	font = Enum.Font.Code,
	background = "rbxassetid://5553946656",
	tilesize = 90,
	cursor = true,
	cursorimg = "https://t0.rbxcdn.com/42f66da98c40252ee151326a82aab51f",
	backgroundcolor = Color3.fromRGB(20, 20, 20),
	tabstextcolor = Color3.fromRGB(240, 240, 240),
	bordercolor = Color3.fromRGB(60, 60, 60),
	accentcolor = Color3.fromRGB(110, 44, 175),
	accentcolor2 = Color3.fromRGB(110, 44, 175),
	outlinecolor = Color3.fromRGB(60, 60, 60),
	outlinecolor2 = Color3.fromRGB(0, 0, 0),
	sectorcolor = Color3.fromRGB(30, 30, 30),
	toptextcolor = Color3.fromRGB(255, 255, 255),
	topheight = 48,
	topcolor = Color3.fromRGB(30, 30, 30),
	topcolor2 = Color3.fromRGB(30, 30, 30),
	buttoncolor = Color3.fromRGB(49, 49, 49),
	buttoncolor2 = Color3.fromRGB(39, 39, 39),
	itemscolor = Color3.fromRGB(200, 200, 200),
	itemscolor2 = Color3.fromRGB(210, 210, 210)
}

--[[if library.theme.cursor and Drawing then
	local success = pcall(function() 
		library.cursor = Drawing.new("Image")
		library.cursor.Data = game:HttpGet(library.theme.cursorimg)
		library.cursor.Size = Vector2.new(64, 64)
		library.cursor.Visible = uis.MouseEnabled
		library.cursor.Rounding = 0
		library.cursor.Position = Vector2.new(mouse.X - 32, mouse.Y + 6)
	end)
	if success and library.cursor then
		uis.InputChanged:Connect(function(input)
			if uis.MouseEnabled then
				if input.UserInputType == Enum.UserInputType.MouseMovement then
					library.cursor.Position = Vector2.new(input.Position.X - 32, input.Position.Y + 7)
				end
			end
		end)

		game:GetService("RunService").RenderStepped:Connect(function()
			uis.OverrideMouseIconBehavior = Enum.OverrideMouseIconBehavior.ForceHide
			library.cursor.Visible = uis.MouseEnabled and (uis.MouseIconEnabled or game:GetService("GuiService").MenuIsOpen)
		end)
	elseif not success and library.cursor then
		library.cursor:Remove()
	end
end]]

function library:CreateWindow(name, hidebutton)
	local window = { }
	window.name = name or ""
	window.size = UDim2.fromOffset(500, 600)
	window.hidebutton = hidebutton or Enum.KeyCode.RightShift
	window.theme = library.theme
	
	local updateevent = Instance.new("BindableEvent")
	function window:UpdateTheme(theme)
		updateevent:Fire(theme or library.theme)
		window.theme = (theme or library.theme)
	end
	
	window.Main = Instance.new("ScreenGui", coregui)
	window.Main.Name = name
	window.Main.DisplayOrder = 15
	if syn then
		syn.protect_gui(window.Main)
	end
	
	if getgenv().uilib then
		getgenv().uilib:Remove()
	end
	getgenv().uilib = window.Main
	
	window.Frame = Instance.new("Frame", window.Main)
	window.Frame.Name = "Background"
	window.Frame.Active = true
	window.Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	window.Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	window.Frame.BorderSizePixel = 2
	window.Frame.Position = UDim2.fromScale(0.365, 0.18)
	window.Frame.Size = window.size
	
	window.TopBar = Instance.new("Frame", window.Frame)
	window.TopBar.Name = "Top"
	window.TopBar.Active = true
	window.TopBar.BackgroundTransparency = 1.000
	window.TopBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	window.TopBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
	window.TopBar.BorderSizePixel = 0
	window.TopBar.Position = UDim2.fromScale(0, 0)
	window.TopBar.Size = UDim2.fromOffset(500, 28)
	
	local dragging, dragInput, dragStart, startPos
	uis.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			local delta = input.Position - dragStart
			window.Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)

	local dragstart = function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = window.Frame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end

	local dragend = function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end
	
	window.TopBar.InputBegan:Connect(dragstart)
	window.TopBar.InputChanged:Connect(dragend)
	
	window.Line = Instance.new("Frame", window.Frame)
	window.Line.Name = "Line"
	window.Line.BackgroundColor3 = window.theme.accentcolor
	window.Line.BorderColor3 = Color3.fromRGB(0, 0, 0)
	window.Line.Size = UDim2.new(0, 500, 0, 2)
	
	window.Name = Instance.new("TextLabel", window.Frame)
	window.Name.Name = "Name"
	window.Name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	window.Name.BackgroundTransparency = 1.000
	window.Name.Position = UDim2.new(0, 8, 0, 4)
	window.Name.Size = UDim2.new(0, 484, 0, 20)
	window.Name.Font = Enum.Font.Code
	window.Name.Text = name
	window.Name.TextColor3 = Color3.fromRGB(255, 255, 255)
	window.Name.TextSize = 16.000
	window.Name.TextStrokeTransparency = 0.000
	window.Name.TextXAlignment = Enum.TextXAlignment.Left
	
	window.UIGradient = Instance.new("UIGradient", window.Frame)
	window.UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(33, 33, 33)), ColorSequenceKeypoint.new(0.12, Color3.fromRGB(25, 25, 25)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(20, 20, 20))}
	window.UIGradient.Rotation = 90
	
	window.MainFrame = Instance.new("Frame", window.Frame)
	window.MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	window.MainFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	window.MainFrame.BorderSizePixel = 2
	window.MainFrame.Position = UDim2.new(0, 8, 0, 29)
	window.MainFrame.Size = UDim2.new(0, 484, 0, 563)
	
	window.UIGradient2 = Instance.new("UIGradient", window.MainFrame)
	window.UIGradient2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(33, 33, 33)), ColorSequenceKeypoint.new(0.12, Color3.fromRGB(25, 25, 25)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(20, 20, 20))}
	window.UIGradient2.Rotation = 90
	
	window.TabsFrame = Instance.new("Frame", window.MainFrame)
	window.TabsFrame.Name = "Tabs"
	window.TabsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	window.TabsFrame.BackgroundTransparency = 1.000
	window.TabsFrame.Size = UDim2.new(0, 484, 0, 40)
	window.TabsFrame.ZIndex = 0
	
	window.UIListLayout = Instance.new("UIListLayout", window.TabsFrame)
	window.UIListLayout.FillDirection = Enum.FillDirection.Horizontal
	window.UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	window.UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	window.UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
	
	uis.InputBegan:Connect(function(key)
		if key.KeyCode == window.hidebutton then
			window.Frame.Visible = not window.Frame.Visible
		end
	end)

	local function checkIfGuiInFront(Pos)
		local objects = coregui:GetGuiObjectsAtPosition(Pos.X, Pos.Y)
		for i,v in pairs(objects) do
			if not string.find(v:GetFullName(), window.name) then
				table.remove(objects, i)
			end
		end
		return (#objects ~= 0 and objects[1].AbsolutePosition ~= Pos)
	end
	
	window.OpenedColorPickers = { }
	window.Tabs = { }
	
	function window:CreateTab(name)
		local tab = { }
		tab.name = name or ""
		
		tab.TabButton = Instance.new("TextButton", window.TabsFrame)
		tab.TabButton.Name = tab.name
		tab.TabButton.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
		tab.TabButton.BackgroundTransparency = 0
		tab.TabButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
		tab.TabButton.BorderSizePixel = 2
		tab.TabButton.Size = UDim2.new(0, 121, 0, 40)
		tab.TabButton.Font = Enum.Font.Code
		tab.TabButton.Text = tab.name
		tab.TabButton.TextColor3 = Color3.fromRGB(150, 150, 150)
		tab.TabButton.TextSize = 14.000
		tab.TabButton.TextStrokeTransparency = 0.000
		tab.TabButton.TextWrapped = true
		
		local block = false
		function tab:SelectTab()
			repeat 
				wait()
			until block == false

			block = true
			for i,v in pairs(window.Tabs) do
				if v ~= tab then
					v.TabButton.TextColor3 = Color3.fromRGB(150, 150, 150)
					v.TabButton.BackgroundTransparency = 0
					v.TabButton.Name = "Tab"
				end
			end

			tab.TabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
			tab.TabButton.BackgroundTransparency = 1.000
			tab.TabButton.Name = "SelectedTab"
			wait(0.2)
			block = false
		end

		if #window.Tabs == 0 then
			tab:SelectTab()
		end

		tab.TabButton.MouseButton1Down:Connect(function()
			tab:SelectTab()
		end)

		tab.SectorsLeft = { }
		tab.SectorsRight = { }
		
		function tab:CreateSector(name, side)
			local sector = { }
			
		end
		return tab
	end
	return window
end
return library
